---
fabric: {

  # options are "solo", "kafka", "etcdraft" (etcdraft support from 2.0.0)
  # for consensus_type, default is kafka
  consensus_type: "{{ Otype }}",
  # options are "goleveldb", "CouchDB", default is goleveldb
  peer_db: "{{ Peer_db }}",
  # options are "true", "false", "client" default is true
  tls: "{{ Tls }}",
  platform: "{{ Platform }}",
  version: "{{ Version }}",
  generate_certs: true,
  #logging_level: "ERROR",
  logging_level: "{{ Logging_level }}",
  metrics: false,
  namespace: "{{ env }}",
  random: "abcdefg",
  k8s: {
    exposeserviceport: False,
    exposesdkport: False,
    storageclass: "default",
    storagecapacity: "2Gi",
    shared_storage: false
  },
  # Peer environment variables to override core.yaml values
  # variables should be in the peer readable format like shown below
  peersettings: {
    CORE_LEDGER_STATE_COUCHDBCONFIG_WARMINDEXESAFTERNBLOCKS: "10"
  },
  # Orderer configuration and environment variables to override
  # configtx.yaml and orderer.yaml values. ordererenv will take the
  # environment variables in the orderer readable format for example:
  # ORDERER_GENERAL_TLS_ENABLED=true
  orderersettings: {
    config: {
      BatchTimeout: 2s,
      BatchSize: {
        MaxMessageCount: 500,
        AbsoluteMaxBytes: "98 MB",
        PreferredMaxBytes: "512 KB"
      }
    },
    ordererenv: {
    }
  },
  kafkasettings: {
    MESSAGE_MAX_BYTES: "103809024",
    MAX_REQUEST_SIZE: "104857600",
    REPLICA_FETCH_MAX_BYTES: "103809024",
    UNCLEAN_LEADER_ELECTION_ENABLE: "true",
    MIN_INSYNC_REPLICAS: "2",
    DEFAULT_REPLICATION_FACTOR: "3"
  },
  raftsettings: {
    Options: {
      TickInterval: "500ms",
      ElectionTick: 10,
      HeartbeatTick: 1,
      MaxInflightBlocks: 5,
      SnapshotIntervalSize: "100 MB"
    }
  },

  # The following section defines how the fabric network is going to be made up
  # cas indicates certificate authority containers
  # peers indicates peer containers
  # orderers indicates orderer containers
  # kafka indicates kafka containers
  # all names must be in lower case. Numeric characters cannot be used to start
  # or end a name. Character dot (.) can only be used in names of peers and orderers.
  network: {{ Networks|to_nice_json|lower }},
  #network: {
  #  fabric001: {
  #    cas: ["ca1st.orga"],
  #    peers: ["anchor@peer1st.orga", "anchor@peer1st.orgb"],
  #    orderers: ["orderer1st.orgc", "orderer1st.orgd"],
  #    zookeepers: [],
  #    kafkas: []
  #  },
  #  fabric002: {
  #    cas: ["ca1st.orgb"],
  #    peers: ["worker@peer2nd.orga", "worker@peer2nd.orgb"],
  #    orderers: ["orderer2nd.orgc", "orderer2nd.orgd"],
  #    zookeepers: [],
  #    kafkas: []
  #  },
  #  fabric003: {
  #    cas: ["ca1st.orgc", "ca1st.orgd"],
  #    peers: ["worker@peer3rd.orga", "worker@peer3rd.orgb"],
  #    orderers: [],
  #    zookeepers: [],
  #    kafkas: []
  #  }
  #},

  # the container tag for main fabric components such as orderer, peer,
  # tools and chaincode. If left blank, then fabric components will be built
  # from the latest fabric source code with the combination of the refspec
  # specified above. If it is not empty, then its values must be the full
  # container tag like the following:
  #     x86_64-1.1.0-alpha                         # alpha release
  #     DAILY_STABLE                               # daily stable
  #     DEV_STABLE                                 # dev stable
  #     s390x-0.4.2                                # release 0.4.2 for s390x
  #     048c91eb47812582f36665fbea3d7e0e68e396bf   # commit build
  #     x86_64-1.0.0-snapshot-8d3275f              # snapshot build
  baseimage_tag: "amd64-1.4.1",
  ccenvimage_tag: "1.4.1",
  sdkimage_tag: "v1.0",
  sdk_port: "4000",

  # The container tag for accessory fabric components such as ca, kafka,
  # zookeeper and couchdb. It has to be the full tag just like the
  # baseimage_tag
  helper_tag: "amd64-0.4.8",
  ca: { admin: "admin", adminpw: "adminpw", image_tag: "amd64-{{ Version }}" },

  # Only use this field when you have a docker repository.
  repo: {
    # the url defines docker hub project access point
    # official hub - url: "hyperledger/",
    # fabric build hub - url: "nexus3.hyperledger.org:10001/hyperledger/",
    url: "hyperledger/",
    username: "",
    password: "",

    # locations to download fabric binaries. This url should point to a
    # compressed such as tar or zip file which contains necessary binaries
    # such as configtxgen, configtxlator, cryptogen etc.
    #bin: "https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric/linux-amd64-1.1.0/hyperledger-fabric-linux-amd64-1.1.0.tar.gz"
    bin: "https://nexus.hyperledger.org/content/repositories/releases/org/hyperledger/fabric/hyperledger-fabric/linux-amd64-{{ Version }}/hyperledger-fabric-linux-amd64-{{ Version }}.tar.gz"
  }
}
