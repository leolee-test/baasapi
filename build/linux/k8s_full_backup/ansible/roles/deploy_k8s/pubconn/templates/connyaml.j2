---
name: "{{ item }}-network"
x-type: "hlfv1"
version: "1.0.0"
client:
  organization: "{{ item }}"
  cryptoconfig:
    path: "/fabric/keyfiles"
  connection:
    timeout:
      peer:
        endorser: 300
        eventHub: 300
        eventReg: 300
      orderer: 300
channels:
  firstchannel:
    orderers:
{% for orderer in allorderers %}
      - {{ orderer.name }}
{% endfor %}
    peers:
{% for peer in allpeers %}
      {{ peer.name }}:
        endorsingPeer: true
        chaincodeQuery: true
        eventSource: true
{% endfor %}
organizations:
{% for org in allorgs %}
  {{ org }}:
    mspid: "{{ org }}"
    cryptoPath: "{{ org }}/users/{username}@{{ org}}/msp"
    adminPrivateKey:
      path: /fabric/keyfiles/{{ org }}/users/Admin@{{ org }}/msp/keystore/admin_private.key
    signedCert:
      path: /fabric/keyfiles/{{ org }}/users/Admin@{{ org }}/msp/signcerts/Admin@{{ org }}-cert.pem       
    peers:
{% for peer in allpeers|selectattr('org', 'equalto', org)|list %}
      - {{ peer.name }}
{% endfor %}
    certificateAuthorities:
{% for ca in allcas|selectattr('org', 'equalto', org)|list %}
      - {{ ca.name }}
{% endfor %}
{% endfor %}
orderers:
{% for orderer in allorderers %}
  {{ orderer.name }}:
    url: "{{ orderer.name }}:7050"
    grpcOptions:
      ssl-target-name-override: "{{ orderer.name }}"
    tlsCACerts:
      path: "{{ '/fabric/keyfiles/'+orderer.org+'/orderers/'+orderer.name+'.'+orderer.org+'/tls/ca.crt' }}"
{% endfor %}
peers:
{% for peer in allpeers %}
  {{ peer.name }}:
    url: "{{ peer.name }}:7051"
    eventUrl: "{{ peer.name }}:7053"
    grpcOptions:
      ssl-target-name-override: "{{ peer.name }}"
    tlsCACerts:
      path: "{{ '/fabric/keyfiles/'+peer.org+'/tlsca/tlsca.'+peer.org+'-cert.pem' }}"
{% endfor %}
certificateAuthorities:
{% for ca in allcas|selectattr('org', 'equalto', item)|list %}
  {{ ca.name }}:
    url: "{{ tls|ternary('https','http') }}://{{ k8shosts[ca.name] }}:{{ k8sports[ca.name+':7054'] }}"
    caName: "{{ ca.name }}"
    httpOptions:
      verify: false
    tlsCACerts:
      path: "{{ '/fabric/keyfiles/'+ca.org+'/tlsca/tlsca.'+ca.org+'-cert.pem' }}"
{% endfor %}
entityMatchers:
  orderer:
{% for orderer in allorderers %}
  - mappedHost: {{ orderer.name }}
    pattern: (\w*){{ orderer.name }}(\w*)
    sslTargetOverrideUrlSubstitutionExp: {{ orderer.name }}
    urlSubstitutionExp: "{{ k8shosts[orderer.name] }}:{{ k8sports[orderer.name+':7050'] }}"
{% endfor %}
  peer:
{% for peer in allpeers %}
  - mappedHost: {{ peer.name }}
    pattern: (\w*){{ peer.name }}(\w*)
    sslTargetOverrideUrlSubstitutionExp: {{ peer.name }}
    urlSubstitutionExp: "{{ k8shosts[peer.name] }}:{{ k8sports[peer.name+':7051'] }}"
    eventUrlSubstitutionExp: "{{ k8shosts[peer.name] }}:{{ k8sports[peer.name+':7053'] }}"
{% endfor %}
