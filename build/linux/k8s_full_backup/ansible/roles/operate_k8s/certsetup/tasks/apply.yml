---
#- debug:
#    var: hostvars
- name: Ensure certificate directory exists 
  file:
    path: "{{ fabricworkdir }}/keyfiles/channels"
    state: "{{ item }}"
  with_items:
    - "directory"

- name: Create the gensis block and channel transaction
  shell: >-
    {{ fabricpath }}/../../bin_{{ fabric.platform }}_{{ fabric.version }}/bin/configtxgen -profile OrgChannel
    -outputCreateChannelTx keyfiles/channels/{{ channelnametocreate }}.tx -channelID {{ channelnametocreate }} 
  args:
    chdir: "{{ fabricworkdir }}"
  when: allorderers | length > 0
- name: Create org anchor peer request json file
  #delegate_to: '{{ sdk_pod.stdout }}'  
  shell: >-
    {{ fabricpath }}/../../bin_{{ fabric.platform }}_{{ fabric.version }}/bin/configtxgen -profile OrgChannel
    -outputAnchorPeersUpdate keyfiles/channels/{{ channelnametocreate }}_{{ item }}_MSPanchors.tx -channelID {{ channelnametocreate }} -asOrg {{ item }}
  args:
    chdir: "{{ fabricworkdir }}"
  when: peerorgs | length > 0
  with_items: "{{ peerorgs }}" 
- include_tasks: "{{ playbook_dir }}/priconn/tasks/apply.yml"
  when: fabric.k8s.exposeserviceport == false     

- name: Copy channel files onto the persistent volume
  command: >-
    kubectl --kubeconfig kubeconfig --namespace {{ namespace }}
    cp {{ item }} {{ sdk_pod.stdout }}:/fabric/keyfiles/
  args:
    chdir: "{{ playbook_dir }}/../../vars/"
  with_items:
    - "{{ fabricworkdir }}/keyfiles/channels"
    - "{{ fabricworkdir }}/keyfiles/connection.yml"
  tags: "placechannelfiles"               
- name: Copy channel files onto the persistent volume  org
  command: >-
    kubectl --kubeconfig kubeconfig --namespace {{ namespace }}   
    cp {{ fabricworkdir }}/keyfiles/{{ item }}/connection.yml {{ sdk_pod.stdout }}:/fabric/keyfiles/{{ item }}/ 
  args:
    chdir: "{{ playbook_dir }}/../../vars/"
  with_items: "{{ peerorgs }}" 
#- name: Copy channel files onto the persistent volume  org for explorer
#  command: >-
#    kubectl --kubeconfig kubeconfig --namespace {{ namespace }}   
#    cp {{ fabricworkdir }}/keyfiles/{{ item }}/connection-profile {{ sdk_pod.stdout }}:/fabric/
#  args:
#    chdir: "{{ playbook_dir }}/../../vars/"
#  with_items: "{{ peerorgs }}" 
#- name: Copy channel files onto the persistent volume  org for marbles
#  command: >-
#    kubectl --kubeconfig kubeconfig --namespace {{ namespace }}   
#    cp {{ fabricworkdir }}/keyfiles/{{ item }}/marbles_config {{ sdk_pod.stdout }}:/fabric/
#  args:
#    chdir: "{{ playbook_dir }}/../../vars/"
#  with_items: "{{ peerorgs }}" 
#- name: Copy channel files onto the persistent volume  org for insurance web
#  command: >-
#    kubectl --kubeconfig kubeconfig --namespace {{ namespace }}   
#    cp {{ fabricworkdir }}/insurance_config {{ sdk_pod.stdout }}:/fabric/
#  args:
#    chdir: "{{ playbook_dir }}/../../vars/"
